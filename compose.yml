###
services:
  traefik:
    image: traefik
    container_name: traefik
    networks:
      - gateway
      - forbidden
    ports:
      - "${TRAEFIK_WEB_PORT:-80}:80"       # traefik
      - "${TRAEFIK_ADMIN_PORT:-8080}:8080" # traefik dashboard
      #
      - "${REDIS_PORT:-6379}:6379"         # redis
      - "${POSTGRES_PORT:-5432}:5432"      # postgres
      - "${MINIO_PORT:-4572}:4572"         # minio S3
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./dynamic.yml:/etc/traefik/dynamic.yml
    restart: always

  #
  whoami:
    image: traefik/whoami
    networks:
      - forbidden
    # ports:
    #   - "80:80"
    restart: always

  # data stores

  # https://hub.docker.com/r/redis/redis-stack
  redis:
    image: redis/redis-stack
    networks:
      - forbidden
    # ports:
    #   - "6379:6379"    # redis port
    #   - "8001:8001"    # redisinsight UI
    environment:
      # persist
      - REDIS_ARGS=--save 5 1
    volumes:
      - redis-data:/data
    restart: always

  # https://github.com/vercel/storage/issues/281
  # https://github.com/hiett/serverless-redis-http
  srh:
    build:
      # context:  https://github.com/osilib/serverless-redis-http.git#${SRH_VERSION:-v0.0.10}
      context:  https://github.com/osilib/serverless-redis-http.git#${SRH_VERSION:-qiangli/fix-runtime-build}
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    image: local/srh
    networks:
      - forbidden
    # ports:
    #   - "8080:8080"
    environment:
      SRH_PORT: 8080
      SRH_MODE: env
      SRH_TOKEN: no_token
      SRH_CONNECTION_STRING: redis://redis:6379
      SRH_MAX_CONNECTIONS: 3
    restart: always

  # https://github.com/pgvector/pgvector.git
  # https://hub.docker.com/_/postgres
  postgres:
    build:
      context: https://github.com/osilib/pgvector.git#${PGVECTOR_VERSION:-v0.7.4}
      dockerfile: Dockerfile
      args:
        - PG_MAJOR=17
      platforms:
        - linux/amd64
        - linux/arm64
    image: local/postgres
    shm_size: 128mb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      # - POSTGRES_HOST_AUTH_METHOD=trust
      # - POSTGRES_DB=
    networks:
      - forbidden
    # ports:
    #   - "5432:5432"
    volumes:
      - ./data/postgres/initdb.d:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    restart: always

  # https://www.pgadmin.org/download/pgadmin-4-container/
  # https://hub.docker.com/r/dpage/pgadmin4/
  pgadmin4:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
    volumes:
      - ./data/pgadmin4/servers.json:/pgadmin4/servers.json
    networks:
      - forbidden
    # ports:
    #   - "80:80"
    restart: always

  # https://hub.docker.com/r/minio/minio
  # last Apache 2.0 license
  # https://github.com/minio/minio/issues/12143
  # https://blog.min.io/from-open-source-to-free-and-open-source-minio-is-now-fully-licensed-under-gnu-agplv3/
  minio:
    image: minio/minio:RELEASE.2021-04-22T15-44-28Z
    environment:
      MINIO_ACCESS_KEY: "admin"
      MINIO_SECRET_KEY: "password"
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "password"
      MINIO_REGION_NAME: "us-west-2"
    # https://github.com/minio/minio/issues/4769
    entrypoint: sh
    command:
      - -c
      - |
        mkdir -p /data/documents
        mkdir -p /data/downloads
        mkdir -p /data/movies
        mkdir -p /data/music
        mkdir -p /data/pictures
        minio server --address :9000 /data
    networks:
      - forbidden
    # ports:
    #   - "9000:9000"
    volumes:
      - minio-data:/data
    restart: always

##
volumes:
  redis-data:
  postgres-data:
  minio-data:

##
networks:
  gateway:
    name: gateway
  forbidden:
    name: forbidden
