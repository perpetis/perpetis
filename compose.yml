###
services:
  # https://hub.docker.com/r/redis/redis-stack
  redis:
    image: redis/redis-stack
    environment:
      # persist
      - REDIS_ARGS=--save 5 1
    volumes:
      - redis-data:/data
    # ports:
    #   - "6379:6379"    # redis port
    #   - "8001:8001"    # redisinsight UI
    restart: always
    networks:
      - openland
    labels:
      - traefik.enable=true
      - traefik.docker.network=openland
      - traefik.http.routers.redisinsight.rule=Host(`redisinsight.openaide.localhost`)
      - traefik.http.routers.redisinsight.entryPoints=web
      - traefik.http.services.redisinsight.loadbalancer.server.port=8001
      - custom.traefik.group=openaide

  # https://hub.docker.com/r/rediscommander/redis-commander
  redis-commander:
    platform: linux/amd64
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    # ports:
    #   - "8081:8081"
    networks:
      - openland
    labels:
      - traefik.enable=true
      - traefik.docker.network=openland
      - traefik.http.routers.redis-commander.rule=Host(`redis-commander.openaide.localhost`)
      - traefik.http.routers.redis-commander.entryPoints=web
      - traefik.http.services.redis-commander.loadbalancer.server.port=8081
      - custom.traefik.group=openaide

  # https://github.com/vercel/storage/issues/281
  # https://github.com/hiett/serverless-redis-http
  srh:
    build:
      # context:  https://github.com/osilib/serverless-redis-http.git#${SRH_VERSION:-v0.0.10}
      context:  https://github.com/osilib/serverless-redis-http.git#${SRH_VERSION:-qiangli/fix-runtime-build}
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    image: local/srh
    # ports:
    #   - "8080:8080"
    environment:
      SRH_PORT: 8080
      SRH_MODE: env
      SRH_TOKEN: no_token
      SRH_CONNECTION_STRING: redis://redis:6379
      SRH_MAX_CONNECTIONS: 3
      LOG_LEVEL: debug
    restart: always
    networks:
      - openland
    labels:
      - traefik.enable=true
      - traefik.docker.network=openland
      # - traefik.http.routers.srh.rule=Host(`srh`)
      # - traefik.http.routers.srh.entryPoints=web
      # - traefik.http.services.srh.loadbalancer.server.port=8080
      - custom.traefik.group=openaide

  # https://github.com/pgvector/pgvector.git
  # https://hub.docker.com/_/postgres
  postgres:
    build:
      context: https://github.com/osilib/pgvector.git#${PGVECTOR_VERSION:-v0.7.4}
      dockerfile: Dockerfile
      args:
        - PG_MAJOR=17
      platforms:
        - linux/amd64
        - linux/arm64
    image: local/postgres
    shm_size: 128mb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      # - POSTGRES_HOST_AUTH_METHOD=trust
      # - POSTGRES_DB=
    # ports:
    #   - "5432:5432"
    volumes:
      - ./data/postgres/initdb.d:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      - openland
    labels:
      - traefik.enable=true
      - traefik.docker.network=openland
      # - traefik.http.routers.postgres.rule=Host(`postgres`)
      # - traefik.http.routers.postgres.entryPoints=web
      # - traefik.http.services.postgres.loadbalancer.server.port=5432
      - custom.traefik.group=openaide

  # https://www.pgadmin.org/download/pgadmin-4-container/
  # https://hub.docker.com/r/dpage/pgadmin4/
  pgadmin4:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=password
    volumes:
      - ./data/pgadmin4/servers.json:/pgadmin4/servers.json
    # ports:
    #   - "80:80"
    networks:
      - openland
    labels:
      - traefik.enable=true
      - traefik.docker.network=openland
      - traefik.http.routers.pgadmin4.rule=Host(`pgadmin4.openaide.localhost`)
      - traefik.http.routers.pgadmin4.entryPoints=web
      - traefik.http.services.pgadmin4.loadbalancer.server.port=80
      - custom.traefik.group=openaide

  # https://hub.docker.com/r/minio/minio
  # last Apache 2.0 license
  # https://github.com/minio/minio/issues/12143
  # https://blog.min.io/from-open-source-to-free-and-open-source-minio-is-now-fully-licensed-under-gnu-agplv3/
  minio:
    image: minio/minio:RELEASE.2021-04-22T15-44-28Z
    environment:
      MINIO_ACCESS_KEY: "admin"
      MINIO_SECRET_KEY: "password"
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "password"
      MINIO_REGION_NAME: "us-west-2"
    # https://github.com/minio/minio/issues/4769
    entrypoint: sh
    command:
      - -c
      - |
        mkdir -p /data/documents
        mkdir -p /data/downloads
        mkdir -p /data/movies
        mkdir -p /data/music
        mkdir -p /data/pictures
        minio server --address :4572 /data
    # ports:
    #   - "4572:4572"
    volumes:
      - minio-data:/data
    restart: always
    networks:
      - openland
    labels:
      - traefik.enable=true
      - traefik.docker.network=openland
      - traefik.http.routers.minio.rule=Host(`minio.openaide.localhost`)
      - traefik.http.routers.minio.entryPoints=web
      - traefik.http.services.minio.loadbalancer.server.port=4572
      - custom.traefik.group=openaide

##
volumes:
  redis-data:
  postgres-data:
  minio-data:

##
networks:
  # docker network create openland
  openland:
    external: true

###